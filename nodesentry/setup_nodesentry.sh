#!/bin/bash

set -e

# === –¶–≤–µ—Ç–∞ ===
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# === –ü—É—Ç–∏ ===
ROOT_DIR="/root/nodesentry"
TEMPLATE_FILE="$ROOT_DIR/nodesentry.service.template"
CONFIG_FILE="$ROOT_DIR/config.yaml"
MODULES_DIR="$ROOT_DIR/modules"

mkdir -p "$MODULES_DIR"

# === –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π ===
echo -e "${BLUE}–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...${NC}"

check_dep() {
  command -v "$1" >/dev/null 2>&1 && echo -e "[${GREEN}‚úî${NC}] $1" || {
    echo -e "[${RED}‚úò${NC}] $1 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    MISSING=true
  }
}

MISSING=false
check_dep python3
check_dep pip3

if ! python3 -c "import requests" 2>/dev/null; then
  echo -e "[${RED}‚úò${NC}] –ú–æ–¥—É–ª—å Python 'requests' –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
  MISSING=true
fi

if ! python3 -c "import yaml" 2>/dev/null; then
  echo -e "[${RED}‚úò${NC}] –ú–æ–¥—É–ª—å Python 'pyyaml' –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
  MISSING=true
fi

if [ "$MISSING" = true ]; then
  echo -e "${RED}–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–æ–≤–∞.${NC}"
  exit 1
else
  echo -e "${GREEN}–í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–∞ –º–µ—Å—Ç–µ.${NC}"
fi

# === config.yaml ===
if [ ! -f "$CONFIG_FILE" ]; then
  echo -e "${YELLOW}–í–≤–æ–¥ Telegram CHAT_ID (BOT_TOKEN —É–∂–µ –∑–∞–¥–∞–Ω):${NC}"
  BOT_TOKEN="7243235590:AAGc3MkrJtOW8O7EiMJlOcSGI3-4tS9Hzdc"
  echo -e "\n${BLUE}‚ÑπÔ∏è –ë–æ—Ç —É–∂–µ —Å–æ–∑–¥–∞–Ω: –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—â–µ–≥–æ –±–æ—Ç–∞ @NodeSentry_bot${NC}"
  echo -e "${YELLOW}üì• –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:${NC}"
  echo -e " - –ù–∞–π–¥–∏—Ç–µ –∏ –æ—Ç–∫—Ä–æ–π—Ç–µ –≤ Telegram: ${GREEN}@NodeSentry_bot${NC}"
  echo -e " - –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ${GREEN}Start${NC}"
  echo -e "\n${YELLOW}üîé –ö–∞–∫ —É–∑–Ω–∞—Ç—å –≤–∞—à CHAT_ID:${NC}"
  echo -e " - –ü–µ—Ä–µ—à–ª–∏—Ç–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç—É: ${GREEN}@getidsbot${NC}"
  echo -e " - –û–Ω –æ—Ç–≤–µ—Ç–∏—Ç –≤–∞–º –≤–∞—à–∏–º CHAT_ID"
  echo ""
  read -p "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à CHAT_ID: " CHAT_ID

  cat <<EOF > "$CONFIG_FILE"
telegram:
  bot_token: "$BOT_TOKEN"
  chat_id: "$CHAT_ID"

node_map:
  "37.46.23.83": "–ù–æ–¥–∞_1"
  "185.183.247.56": "–ù–æ–¥–∞_2"
  "62.171.145.237": "–ù–æ–¥–∞_8"
EOF

  echo -e "${GREEN}–§–∞–π–ª config.yaml —Å–æ–∑–¥–∞–Ω –≤ $CONFIG_FILE${NC}"
fi

# === –®–∞–±–ª–æ–Ω systemd ===
if [ ! -f "$TEMPLATE_FILE" ]; then
  cat <<EOF > "$TEMPLATE_FILE"
[Unit]
Description=NodeSentry Monitor: {{MODULE_NAME}}
After=network.target

[Service]
Type=simple
User=root
ExecStart=/usr/bin/python3 /root/nodesentry/modules/{{MODULE_NAME}}/{{FILENAME}}
Restart=always
RestartSec=5

[Install]
WantedBy=multi-user.target
EOF

  echo -e "${GREEN}–°–æ–∑–¥–∞–Ω —à–∞–±–ª–æ–Ω $TEMPLATE_FILE${NC}"
fi

# === –£–¥–∞–ª–µ–Ω–∏–µ –º–æ–¥—É–ª—è ===
remove_selected_module() {
  MODULE="$1"
  SERVICE1="nodesentry-$MODULE.service"
  SERVICE2="nodesentry-balance-$MODULE.service"
  MODULE_DIR="$MODULES_DIR/$MODULE"
  SERVICE_PATH1="/etc/systemd/system/$SERVICE1"
  SERVICE_PATH2="/etc/systemd/system/$SERVICE2"

  echo -e "${BLUE}–£–¥–∞–ª—è–µ–º: $MODULE${NC}"

  systemctl stop "$SERVICE1" 2>/dev/null || true
  systemctl disable "$SERVICE1" 2>/dev/null || true
  [ -f "$SERVICE_PATH1" ] && rm -f "$SERVICE_PATH1" && echo "–£–¥–∞–ª—ë–Ω: $SERVICE_PATH1"

  systemctl stop "$SERVICE2" 2>/dev/null || true
  systemctl disable "$SERVICE2" 2>/dev/null || true
  [ -f "$SERVICE_PATH2" ] && rm -f "$SERVICE_PATH2" && echo "–£–¥–∞–ª—ë–Ω: $SERVICE_PATH2"

  [ -d "$MODULE_DIR" ] && rm -rf "$MODULE_DIR" && echo "–£–¥–∞–ª–µ–Ω–∞ –ø–∞–ø–∫–∞: $MODULE_DIR"

  systemctl daemon-reload
  echo -e "${GREEN}–ú–æ–¥—É–ª—å $MODULE –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª—ë–Ω.${NC}"
}

remove_module_menu() {
  echo -e "\n${YELLOW}–£–¥–∞–ª–µ–Ω–∏–µ –º–æ–¥—É–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞${NC}"

  MODULES=()
  for d in "$MODULES_DIR"/*/; do
    MODULE=$(basename "$d")
    MODULES+=("$MODULE")
  done

  if [ ${#MODULES[@]} -eq 0 ]; then
    echo -e "${RED}–ù–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –º–æ–¥—É–ª–µ–π.${NC}"
    return
  fi

  echo "–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥—É–ª—å –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:"
  select MODULE in "${MODULES[@]}" "–û—Ç–º–µ–Ω–∞"; do
    case "$REPLY" in
      ''|*[!0-9]*) echo "–ù—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ." ;;
      *)
        if [ "$REPLY" -ge 1 ] && [ "$REPLY" -le ${#MODULES[@]} ]; then
          remove_selected_module "$MODULE"
          break
        elif [ "$REPLY" -eq $(( ${#MODULES[@]} + 1 )) ]; then
          echo "–û—Ç–º–µ–Ω–∞."
          break
        else
          echo "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä."
        fi
        ;;
    esac
  done
}

# === –£—Å—Ç–∞–Ω–æ–≤–∫–∞ initverse ===
install_initverse() {
  INSTALLER_URL="https://raw.githubusercontent.com/Gansa1os/Node/main/nodesentry/modules/initverse/install.sh"
  INSTALLER_PATH="/tmp/initverse_install.sh"

  curl -sSf -o "$INSTALLER_PATH" "$INSTALLER_URL" || {
    echo -e "${RED}–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å install.sh –¥–ª—è initverse.${NC}"
    exit 1
  }

  source "$INSTALLER_PATH"
  install_initverse
}

# === –£—Å—Ç–∞–Ω–æ–≤–∫–∞ vana ===
install_vana() {
  INSTALLER_URL="https://raw.githubusercontent.com/Gansa1os/Node/main/nodesentry/modules/vana/install.sh"
  INSTALLER_PATH="/tmp/vana_install.sh"

  curl -sSf -o "$INSTALLER_PATH" "$INSTALLER_URL" || {
    echo -e "${RED}–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å install.sh –¥–ª—è vana.${NC}"
    exit 1
  }

  source "$INSTALLER_PATH"
  install_vana
}

# === –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ===
while true; do
  echo ""
  echo -e "${BLUE}NodeSentry ‚Äî –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é${NC}"
  echo "1) –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ initverse"
  echo "2) –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ vana"
  echo "3) –£–¥–∞–ª–∏—Ç—å –º–æ–¥—É–ª—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
  echo "0) –í—ã—Ö–æ–¥"
  read -p "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é (—Ü–∏—Ñ—Ä–æ–π): " choice

  case $choice in
    1) install_initverse ;;
    2) install_vana ;;
    3) remove_module_menu ;;
    0) echo -e "${YELLOW}–í—ã—Ö–æ–¥...${NC}"; exit 0 ;;
    *) echo -e "${RED}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä${NC}" ;;
  esac
done